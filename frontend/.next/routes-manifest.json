{
  "version": 3,
  "pages404": true,
  "caseSensitive": false,
  "basePath": "",
  "redirects": [
    {
      "source": "/:path+/",
      "destination": "/:path+",
      "internal": true,
      "statusCode": 308,
      "regex": "^(?:/((?:[^/]+?)(?:/(?:[^/]+?))*))/$"
    }
  ],
  "headers": [
    {
      "source": "/:path*",
      "headers": [
        {
          "key": "X-DNS-Prefetch-Control",
          "value": "on"
        },
        {
          "key": "X-Frame-Options",
          "value": "SAMEORIGIN"
        },
        {
          "key": "X-Content-Type-Options",
          "value": "nosniff"
        },
        {
          "key": "Referrer-Policy",
          "value": "origin-when-cross-origin"
        }
      ],
      "regex": "^(?:/((?:[^/]+?)(?:/(?:[^/]+?))*))?(?:/)?$"
    }
  ],
  "rewrites": {
    "beforeFiles": [],
    "afterFiles": [],
    "fallback": []
  },
  "dynamicRoutes": [
    {
      "page": "/reset-password/[token]",
      "regex": "^/reset\\-password/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPtoken": "nxtPtoken"
      },
      "namedRegex": "^/reset\\-password/(?<nxtPtoken>[^/]+?)(?:/)?$"
    },
    {
      "page": "/user/elderly/[id]",
      "regex": "^/user/elderly/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/user/elderly/(?<nxtPid>[^/]+?)(?:/)?$"
    }
  ],
  "staticRoutes": [
    {
      "page": "/",
      "regex": "^/(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/(?:/)?$"
    },
    {
      "page": "/_not-found",
      "regex": "^/_not\\-found(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/_not\\-found(?:/)?$"
    },
    {
      "page": "/admin/alerts",
      "regex": "^/admin/alerts(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/admin/alerts(?:/)?$"
    },
    {
      "page": "/admin/dashboard",
      "regex": "^/admin/dashboard(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/admin/dashboard(?:/)?$"
    },
    {
      "page": "/admin/users",
      "regex": "^/admin/users(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/admin/users(?:/)?$"
    },
    {
      "page": "/commercial-law",
      "regex": "^/commercial\\-law(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/commercial\\-law(?:/)?$"
    },
    {
      "page": "/forgot-password",
      "regex": "^/forgot\\-password(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/forgot\\-password(?:/)?$"
    },
    {
      "page": "/login",
      "regex": "^/login(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/login(?:/)?$"
    },
    {
      "page": "/privacy",
      "regex": "^/privacy(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/privacy(?:/)?$"
    },
    {
      "page": "/register",
      "regex": "^/register(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/register(?:/)?$"
    },
    {
      "page": "/terms",
      "regex": "^/terms(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/terms(?:/)?$"
    },
    {
      "page": "/user/account",
      "regex": "^/user/account(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/user/account(?:/)?$"
    },
    {
      "page": "/user/billing",
      "regex": "^/user/billing(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/user/billing(?:/)?$"
    },
    {
      "page": "/user/dashboard",
      "regex": "^/user/dashboard(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/user/dashboard(?:/)?$"
    },
    {
      "page": "/user/elderly",
      "regex": "^/user/elderly(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/user/elderly(?:/)?$"
    },
    {
      "page": "/user/elderly/new",
      "regex": "^/user/elderly/new(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/user/elderly/new(?:/)?$"
    },
    {
      "page": "/user/history",
      "regex": "^/user/history(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/user/history(?:/)?$"
    },
    {
      "page": "/user/notifications",
      "regex": "^/user/notifications(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/user/notifications(?:/)?$"
    }
  ],
  "dataRoutes": [],
  "rsc": {
    "header": "RSC",
    "varyHeader": "RSC, Next-Router-State-Tree, Next-Router-Prefetch, Next-Router-Segment-Prefetch",
    "prefetchHeader": "Next-Router-Prefetch",
    "didPostponeHeader": "x-nextjs-postponed",
    "contentTypeHeader": "text/x-component",
    "suffix": ".rsc",
    "prefetchSuffix": ".prefetch.rsc",
    "prefetchSegmentHeader": "Next-Router-Segment-Prefetch",
    "prefetchSegmentSuffix": ".segment.rsc",
    "prefetchSegmentDirSuffix": ".segments"
  },
  "rewriteHeaders": {
    "pathHeader": "x-nextjs-rewritten-path",
    "queryHeader": "x-nextjs-rewritten-query"
  }
}